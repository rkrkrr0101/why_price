실시간순위api docs
https://apiportal.koreainvestment.com/apiservice/apiservice-domestic-stock-ranking#L_6df56964-f22b-43d4-9457-f06264018e5b

도메인에 코어외부(웹,영속성등)로직이 섞이기 시작하면 엔티티분리


컨트롤러 예외처리
gpt프롬프트 튜닝

헥사고날
    도메인
        트랙에셋-멤버(에셋?응집도로 보면 멤버가 맞는거같기도하고)
        멤버-멤버
        레포트-레포트
        에셋-에셋
    어플리케이션
        포트
            인풋포트
                유스케이스(분리?)
                유스케이스입력dto
                유스케이스출력dto
            아웃풋포트
                레포지토리인터페이스 포트
                api포트
                리스폰서포트
        서비스
            서비스
    어댑터
        인풋
            컨트롤러
            컨트롤러입력dto
        아웃풋
            apifetcher-에셋
            한투하이페처-레포트
            한투토큰페처-레포트
            gpt리스폰서-공용
            레포지토리구현어댑터
            jpa레포지토리


에셋과 멤버 합체?-이경우 에셋은 jpa분리해야할듯?
이후 접근자세팅


유스케이스 분리후 컨트롤러 분리시에는 유스케이스부터 분리하고 서비스-이후 컨트롤러 분리//컨트롤러분리는 굳이 싶음
koreanStockHasVolatility 도메인서비스로 변경?
컨트롤러분리를 해야할까?//스킵

헥사고날이후 dto 프로텍티드 처리

생각할거
    도메인과 jpa엔티티분리?



후순위
gptResponser에서 모델 di받기
gptResponser에서 AiRespnser로 변경(di모델 추상화로 가능해짐)
gpt 모델과 옵션값 빈으로 뽑기

생각
유스케이스 분리?
레포지토리 포트어댑터후 분리?


jpa 설정
https://easywritten.com/post/setting-up-jpa-without-spring-in-kotlin/

클린아키텍처
https://github.com/wikibook/clean-architecture/


고칠점
    설계시 유스케이스단위로 생각하기





